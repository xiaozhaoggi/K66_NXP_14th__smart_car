<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\SeekFree_Kinetis.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\SeekFree_Kinetis.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060528: Last Updated: Sun Oct 13 15:18:12 2019
<BR><P>
<H3>Maximum Stack Usage =        304 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
PIT0_IRQHandler &rArr; dianci &rArr; adc_once &rArr; adc_start
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[8a]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[9]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">HardFault_Handler</a><BR>
 <LI><a href="#[a]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a]">MemManage_Handler</a><BR>
 <LI><a href="#[b]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b]">BusFault_Handler</a><BR>
 <LI><a href="#[c]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[c]">UsageFault_Handler</a><BR>
 <LI><a href="#[d]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[d]">SVC_Handler</a><BR>
 <LI><a href="#[e]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[e]">DebugMon_Handler</a><BR>
 <LI><a href="#[f]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[f]">PendSV_Handler</a><BR>
 <LI><a href="#[10]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[10]">SysTick_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[38]">ADC0_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[5a]">ADC1_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[b]">BusFault_Handler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[5d]">CAN0_Bus_Off_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[5e]">CAN0_Error_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[5c]">CAN0_ORed_Message_buffer_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[60]">CAN0_Rx_Warning_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[5f]">CAN0_Tx_Warning_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[61]">CAN0_Wake_Up_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[70]">CAN1_Bus_Off_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[71]">CAN1_Error_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[6f]">CAN1_ORed_Message_buffer_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[73]">CAN1_Rx_Warning_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[72]">CAN1_Tx_Warning_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[74]">CAN1_Wake_Up_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[39]">CMP0_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[3a]">CMP1_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[57]">CMP2_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[6d]">CMP3_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[3e]">CMT_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[49]">DAC0_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[59]">DAC1_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[11]">DMA0_IRQHandler</a> from isr.o(i.DMA0_IRQHandler) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[1b]">DMA10_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[1c]">DMA11_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[1d]">DMA12_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[1e]">DMA13_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[1f]">DMA14_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[20]">DMA15_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[12]">DMA1_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[13]">DMA2_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[14]">DMA3_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[15]">DMA4_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[16]">DMA5_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[17]">DMA6_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[18]">DMA7_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[19]">DMA8_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[1a]">DMA9_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[21]">DMA_Error_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[e]">DebugMon_Handler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[75]">DefaultISR</a> from startup_mk66f18.o(.text) referenced 139 times from startup_mk66f18.o(RESET)
 <LI><a href="#[63]">ENET_1588_Timer_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[66]">ENET_Error_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[65]">ENET_Receive_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[64]">ENET_Transmit_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[23]">FTFE_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[3b]">FTM0_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[3c]">FTM1_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[3d]">FTM2_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[58]">FTM3_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[9]">HardFault_Handler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[29]">I2C0_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[2a]">I2C1_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[5b]">I2C2_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[6c]">I2C3_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[2e]">I2S0_Rx_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[2d]">I2S0_Tx_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[26]">LLWU_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[4b]">LPTMR0_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[67]">LPUART0_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[25]">LVD_LVW_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[4a]">MCG_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[22]">MCM_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[a]">MemManage_Handler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[8]">NMI_Handler</a> from system_mk66.o(i.NMI_Handler) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[45]">PDB0_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[41]">PIT0_IRQHandler</a> from isr.o(i.PIT0_IRQHandler) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[42]">PIT1_IRQHandler</a> from isr.o(i.PIT1_IRQHandler) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[43]">PIT2_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[44]">PIT3_IRQHandler</a> from isr.o(i.PIT3_IRQHandler) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[4c]">PORTA_IRQHandler</a> from isr.o(i.PORTA_IRQHandler) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[4d]">PORTB_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[4e]">PORTC_IRQHandler</a> from isr.o(i.PORTC_IRQHandler) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[4f]">PORTD_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[50]">PORTE_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[f]">PendSV_Handler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[28]">RNG_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[3f]">RTC_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[40]">RTC_Seconds_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[24]">Read_Collision_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[2f]">Reserved46_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[48]">Reserved71_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[55]">Reserved84_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[56]">Reserved85_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[7]">Reset_Handler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[62]">SDHC_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[2b]">SPI0_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[2c]">SPI1_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[52]">SPI2_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[d]">SVC_Handler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[51]">SWI_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[76]">Start</a> from system_mk66.o(i.Start) referenced from startup_mk66f18.o(.text)
 <LI><a href="#[10]">SysTick_Handler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[69]">TPM1_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[6a]">TPM2_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[68]">TSI0_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[31]">UART0_ERR_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[30]">UART0_RX_TX_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[33]">UART1_ERR_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[32]">UART1_RX_TX_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[35]">UART2_ERR_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[34]">UART2_RX_TX_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[37]">UART3_ERR_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[36]">UART3_RX_TX_IRQHandler</a> from isr.o(i.UART3_RX_TX_IRQHandler) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[54]">UART4_ERR_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[53]">UART4_RX_TX_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[46]">USB0_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[47]">USBDCD_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[6b]">USBHSDCD_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[6e]">USBHS_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[c]">UsageFault_Handler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[27]">WDOG_EWM_IRQHandler</a> from startup_mk66f18.o(.text) referenced from startup_mk66f18.o(RESET)
 <LI><a href="#[78]">__main</a> from __main.o(!!!main) referenced from startup_mk66f18.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[78]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[79]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[7b]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[f2]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[f3]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[f4]"></a>__decompress</STRONG> (Thumb, 90 bytes, Stack size unknown bytes, __dczerorl2.o(!!dczerorl2), UNUSED)

<P><STRONG><a name="[f5]"></a>__decompress1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(!!dczerorl2), UNUSED)

<P><STRONG><a name="[f6]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[81]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[7c]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000001))
<BR><BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_init
</UL>

<P><STRONG><a name="[f7]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[f8]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[f9]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[fa]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[fb]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[fc]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[fd]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[fe]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[ff]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[100]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[101]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[102]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[103]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[104]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[105]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[106]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[107]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[108]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[109]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[10a]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[86]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[10b]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[10c]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000007))

<P><STRONG><a name="[10d]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[10e]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000010))

<P><STRONG><a name="[10f]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A))

<P><STRONG><a name="[110]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[111]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[7a]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[112]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[7e]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[80]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[113]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[82]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 124 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; key &rArr; rowflag &rArr; OLED_Print_Num2 &rArr; OLED_P6x8Str &rArr; OLED_Set_Pos &rArr; OLED_WrCmd &rArr; gpio_set
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[114]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[8b]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[85]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[115]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[87]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[7]"></a>Reset_Handler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>ADC0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DefaultISR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>ADC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>CAN0_Bus_Off_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>CAN0_Error_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>CAN0_ORed_Message_buffer_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>CAN0_Rx_Warning_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[5f]"></a>CAN0_Tx_Warning_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>CAN0_Wake_Up_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[70]"></a>CAN1_Bus_Off_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[71]"></a>CAN1_Error_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[6f]"></a>CAN1_ORed_Message_buffer_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[73]"></a>CAN1_Rx_Warning_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[72]"></a>CAN1_Tx_Warning_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[74]"></a>CAN1_Wake_Up_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>CMP0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>CMP1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>CMP2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[6d]"></a>CMP3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>CMT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>DAC0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>DAC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>DMA11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>DMA12_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>DMA13_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>DMA14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>DMA15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>DMA1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>DMA2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>DMA3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>DMA4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>DMA5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DMA6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA8_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>DMA_Error_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[75]"></a>DefaultISR</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[63]"></a>ENET_1588_Timer_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[66]"></a>ENET_Error_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[65]"></a>ENET_Receive_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[64]"></a>ENET_Transmit_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>FTFE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>FTM0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>FTM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>FTM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>FTM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>I2C0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>I2C2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[6c]"></a>I2C3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>I2S0_Rx_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>I2S0_Tx_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>LLWU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>LPTMR0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[67]"></a>LPUART0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>LVD_LVW_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>MCG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>MCM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>PDB0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>PIT2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>PORTB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>PORTD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>PORTE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>RNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>RTC_Seconds_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>Read_Collision_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>Reserved46_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>Reserved71_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>Reserved84_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>Reserved85_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[62]"></a>SDHC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>SPI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>SWI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[69]"></a>TPM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[6a]"></a>TPM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[68]"></a>TSI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>UART0_ERR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>UART0_RX_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>UART1_ERR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>UART1_RX_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>UART2_ERR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>UART2_RX_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>UART3_ERR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>UART4_ERR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>UART4_RX_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>USB0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>USBDCD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[6b]"></a>USBHSDCD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[6e]"></a>USBHS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>WDOG_EWM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk66f18.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[8a]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_mk66f18.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[ca]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dianci
</UL>

<P><STRONG><a name="[116]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[117]"></a>__rt_memclr_w</STRONG> (Thumb, 78 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[118]"></a>_memset_w</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[119]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[1]"></a>__rt_heap_escrow</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[0]"></a>__rt_heap_expand</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[11a]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[89]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[11b]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[11c]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[11d]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[11e]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[7f]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[84]"></a>exit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[88]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[8c]"></a>Check_stop</STRONG> (Thumb, 170 bytes, Stack size 16 bytes, findline.o(i.Check_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Check_stop &rArr; ftm_pwm_duty
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftm_pwm_duty
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIT3_IRQHandler
</UL>

<P><STRONG><a name="[11]"></a>DMA0_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, isr.o(i.DMA0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA0_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ov7725_dma
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[c3]"></a>Disable_Wdog</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, system_mk66.o(i.Disable_Wdog))
<BR><BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start
</UL>

<P><STRONG><a name="[8f]"></a>FLASH_EraseSector</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, mk60_flash.o(i.FLASH_EraseSector))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = FLASH_EraseSector &rArr; FlashCmdStart
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashCmdStart
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;saveflash
</UL>

<P><STRONG><a name="[de]"></a>FLASH_Init</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, mk60_flash.o(i.FLASH_Init))
<BR><BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[91]"></a>FLASH_WriteSector</STRONG> (Thumb, 110 bytes, Stack size 40 bytes, mk60_flash.o(i.FLASH_WriteSector))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = FLASH_WriteSector &rArr; FlashCmdStart
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashCmdStart
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;saveflash
</UL>

<P><STRONG><a name="[92]"></a>FTM_port_mux</STRONG> (Thumb, 264 bytes, Stack size 16 bytes, mk60_ftm.o(i.FTM_port_mux))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = FTM_port_mux &rArr; port_init
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;port_init
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftm_pwm_init
</UL>

<P><STRONG><a name="[df]"></a>Flash_Read</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, key.o(i.Flash_Read))
<BR><BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[94]"></a>I2C_SendACK</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, seekfree_iic.o(i.I2C_SendACK))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = I2C_SendACK &rArr; gpio_set
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simiic_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_ch
</UL>

<P><STRONG><a name="[97]"></a>IIC_init</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, seekfree_iic.o(i.IIC_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = IIC_init &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;port_init_NoAlt
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ov7725_init
</UL>

<P><STRONG><a name="[9a]"></a>IIC_start</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, seekfree_iic.o(i.IIC_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = IIC_start &rArr; gpio_set
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simiic_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simiic_write_reg
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simiic_read_reg
</UL>

<P><STRONG><a name="[9b]"></a>IIC_stop</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, seekfree_iic.o(i.IIC_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = IIC_stop &rArr; gpio_set
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simiic_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simiic_write_reg
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simiic_read_reg
</UL>

<P><STRONG><a name="[a8]"></a>Image_Decompression</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, seekfree_7725.o(i.Image_Decompression))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Image_Decompression
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIT0_IRQHandler
</UL>

<P><STRONG><a name="[9d]"></a>KEY6_Scan</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, key.o(i.KEY6_Scan))
<BR><BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_Scan
</UL>

<P><STRONG><a name="[9c]"></a>KEY_Scan</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, key.o(i.KEY_Scan))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = KEY_Scan
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY6_Scan
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key
</UL>

<P><STRONG><a name="[dd]"></a>Motor_PID_init</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, pid.o(i.Motor_PID_init))
<BR><BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9e]"></a>Motor_control</STRONG> (Thumb, 798 bytes, Stack size 8 bytes, pid.o(i.Motor_control))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Motor_control &rArr; ftm_pwm_duty
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftm_pwm_duty
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIT3_IRQHandler
</UL>

<P><STRONG><a name="[8]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, system_mk66.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[a3]"></a>OLED_DLY_ms</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, seekfree_oled.o(i.OLED_DLY_ms))
<BR><BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Init
</UL>

<P><STRONG><a name="[9f]"></a>OLED_Fill</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, seekfree_oled.o(i.OLED_Fill))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = OLED_Fill &rArr; OLED_WrDat &rArr; gpio_set
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_WrDat
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_WrCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Init
</UL>

<P><STRONG><a name="[a2]"></a>OLED_Init</STRONG> (Thumb, 298 bytes, Stack size 8 bytes, seekfree_oled.o(i.OLED_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = OLED_Init &rArr; OLED_Fill &rArr; OLED_WrDat &rArr; gpio_set
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;port_init_NoAlt
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Fill
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_WrCmd
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Set_Pos
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_DLY_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a5]"></a>OLED_P6x8Str</STRONG> (Thumb, 96 bytes, Stack size 32 bytes, seekfree_oled.o(i.OLED_P6x8Str))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = OLED_P6x8Str &rArr; OLED_Set_Pos &rArr; OLED_WrCmd &rArr; gpio_set
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_WrDat
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Set_Pos
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Print_Num2
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rowflag
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paper4
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paper3
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paper2
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paper1
</UL>

<P><STRONG><a name="[a6]"></a>OLED_Print_Num2</STRONG> (Thumb, 176 bytes, Stack size 32 bytes, seekfree_oled.o(i.OLED_Print_Num2))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = OLED_Print_Num2 &rArr; OLED_P6x8Str &rArr; OLED_Set_Pos &rArr; OLED_WrCmd &rArr; gpio_set
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_P6x8Str
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow10
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rowflag
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paper4
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paper3
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paper2
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paper1
</UL>

<P><STRONG><a name="[a4]"></a>OLED_Set_Pos</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, seekfree_oled.o(i.OLED_Set_Pos))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = OLED_Set_Pos &rArr; OLED_WrCmd &rArr; gpio_set
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_WrCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Init
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dis_bmp
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_P6x8Str
</UL>

<P><STRONG><a name="[a0]"></a>OLED_WrCmd</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, seekfree_oled.o(i.OLED_WrCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = OLED_WrCmd &rArr; gpio_set
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Init
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Fill
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Set_Pos
</UL>

<P><STRONG><a name="[a1]"></a>OLED_WrDat</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, seekfree_oled.o(i.OLED_WrDat))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = OLED_WrDat &rArr; gpio_set
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dis_bmp
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_P6x8Str
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Fill
</UL>

<P><STRONG><a name="[41]"></a>PIT0_IRQHandler</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, isr.o(i.PIT0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = PIT0_IRQHandler &rArr; dianci &rArr; adc_once &rArr; adc_start
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jizhunhang
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jiaquan_error1
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;findline
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dianci
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SE_control
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Image_Decompression
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>PIT1_IRQHandler</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, isr.o(i.PIT1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = PIT1_IRQHandler &rArr; gpio_set
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_delay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>PIT3_IRQHandler</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, isr.o(i.PIT3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = PIT3_IRQHandler &rArr; SPEED_Filter &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftm_quad_get
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftm_quad_clean
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPEED_Filter
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Motor_control
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_stop
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>PORTA_IRQHandler</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, isr.o(i.PORTA_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = PORTA_IRQHandler &rArr; gpio_get
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pit_time_start
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pit_time_get
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[b5]"></a>PORTA_init</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, isr.o(i.PORTA_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = PORTA_init &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4e]"></a>PORTC_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, isr.o(i.PORTC_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PORTC_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ov7725_vsync
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[d7]"></a>SE_PID_init</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, pid.o(i.SE_PID_init))
<BR><BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ad]"></a>SE_control</STRONG> (Thumb, 952 bytes, Stack size 8 bytes, pid.o(i.SE_control))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SE_control &rArr; ftm_pwm_duty
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftm_pwm_duty
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIT0_IRQHandler
</UL>

<P><STRONG><a name="[bb]"></a>SE_init</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, steering engine.o(i.SE_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = SE_init &rArr; ftm_pwm_init &rArr; FTM_port_mux &rArr; port_init
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftm_pwm_init
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b1]"></a>SPEED_Filter</STRONG> (Thumb, 356 bytes, Stack size 64 bytes, pid.o(i.SPEED_Filter))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = SPEED_Filter &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIT3_IRQHandler
</UL>

<P><STRONG><a name="[c1]"></a>SYSTEM_CLK</STRONG> (Thumb, 170 bytes, Stack size 8 bytes, system_mk66.o(i.SYSTEM_CLK))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SYSTEM_CLK
</UL>
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;div_set
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start
</UL>

<P><STRONG><a name="[76]"></a>Start</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, system_mk66.o(i.Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Start &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSTEM_CLK
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disable_Wdog
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(.text)
</UL>
<P><STRONG><a name="[36]"></a>UART3_RX_TX_IRQHandler</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, isr.o(i.UART3_RX_TX_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UART3_RX_TX_IRQHandler &rArr; mt9v032_cof_uart_interrupt
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mt9v032_cof_uart_interrupt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mk66f18.o(RESET)
</UL>
<P><STRONG><a name="[c5]"></a>adc_config</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, dianci.o(i.adc_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = adc_config &rArr; adc_init &rArr; port_init
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_init
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c6]"></a>adc_init</STRONG> (Thumb, 426 bytes, Stack size 16 bytes, mk60_adc.o(i.adc_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = adc_init &rArr; port_init
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;port_init
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_config
</UL>

<P><STRONG><a name="[c7]"></a>adc_once</STRONG> (Thumb, 70 bytes, Stack size 20 bytes, mk60_adc.o(i.adc_once))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = adc_once &rArr; adc_start
</UL>
<BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_start
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dianci
</UL>

<P><STRONG><a name="[c8]"></a>adc_start</STRONG> (Thumb, 52 bytes, Stack size 12 bytes, mk60_adc.o(i.adc_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = adc_start
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_once
</UL>

<P><STRONG><a name="[c9]"></a>boma</STRONG> (Thumb, 150 bytes, Stack size 8 bytes, key.o(i.boma))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = boma &rArr; gpio_get
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_get
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key
</UL>

<P><STRONG><a name="[ac]"></a>dianci</STRONG> (Thumb, 1614 bytes, Stack size 264 bytes, dianci.o(i.dianci))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = dianci &rArr; adc_once &rArr; adc_start
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftm_pwm_duty
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_once
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIT0_IRQHandler
</UL>

<P><STRONG><a name="[cb]"></a>dis_bmp</STRONG> (Thumb, 472 bytes, Stack size 40 bytes, seekfree_oled.o(i.dis_bmp))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = dis_bmp &rArr; OLED_Set_Pos &rArr; OLED_WrCmd &rArr; gpio_set
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_WrDat
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Set_Pos
</UL>
<BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paper1
</UL>

<P><STRONG><a name="[c2]"></a>div_set</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, system_mk66.o(i.div_set))
<BR><BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSTEM_CLK
</UL>

<P><STRONG><a name="[cc]"></a>dma_portx2buff_init</STRONG> (Thumb, 398 bytes, Stack size 56 bytes, mk60_dma.o(i.dma_portx2buff_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = dma_portx2buff_init &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;port_init
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ov7725_port_init
</UL>

<P><STRONG><a name="[aa]"></a>findline</STRONG> (Thumb, 1064 bytes, Stack size 40 bytes, findline.o(i.findline))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = findline &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIT0_IRQHandler
</UL>

<P><STRONG><a name="[8d]"></a>ftm_pwm_duty</STRONG> (Thumb, 96 bytes, Stack size 12 bytes, mk60_ftm.o(i.ftm_pwm_duty))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ftm_pwm_duty
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dianci
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SE_control
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Motor_control
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_stop
</UL>

<P><STRONG><a name="[bc]"></a>ftm_pwm_init</STRONG> (Thumb, 270 bytes, Stack size 40 bytes, mk60_ftm.o(i.ftm_pwm_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = ftm_pwm_init &rArr; FTM_port_mux &rArr; port_init
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FTM_port_mux
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_init
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SE_init
</UL>

<P><STRONG><a name="[b0]"></a>ftm_quad_clean</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mk60_ftm.o(i.ftm_quad_clean))
<BR><BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIT3_IRQHandler
</UL>

<P><STRONG><a name="[af]"></a>ftm_quad_get</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, mk60_ftm.o(i.ftm_quad_get))
<BR><BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIT3_IRQHandler
</UL>

<P><STRONG><a name="[cd]"></a>ftm_quad_init</STRONG> (Thumb, 218 bytes, Stack size 8 bytes, mk60_ftm.o(i.ftm_quad_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = ftm_quad_init &rArr; port_init
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;port_init
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ce]"></a>get_clk</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, common.o(i.get_clk))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = get_clk &rArr; uart_init &rArr; port_init
</UL>
<BR>[Calls]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ba]"></a>gpio_ddr</STRONG> (Thumb, 74 bytes, Stack size 20 bytes, mk60_gpio.o(i.gpio_ddr))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = gpio_ddr
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_ch
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCCB_WaitAck
</UL>

<P><STRONG><a name="[b2]"></a>gpio_get</STRONG> (Thumb, 38 bytes, Stack size 12 bytes, mk60_gpio.o(i.gpio_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = gpio_get
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORTA_IRQHandler
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;boma
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_ch
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCCB_WaitAck
</UL>

<P><STRONG><a name="[98]"></a>gpio_init</STRONG> (Thumb, 200 bytes, Stack size 24 bytes, mk60_gpio.o(i.gpio_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gpio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_portx2buff_init
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Init
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_init
</UL>

<P><STRONG><a name="[95]"></a>gpio_set</STRONG> (Thumb, 66 bytes, Stack size 20 bytes, mk60_gpio.o(i.gpio_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = gpio_set
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Init
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIT1_IRQHandler
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_WrDat
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_WrCmd
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_ch
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_ch
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_stop
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_start
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SendACK
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCCB_WaitAck
</UL>

<P><STRONG><a name="[ab]"></a>jiaquan_error1</STRONG> (Thumb, 142 bytes, Stack size 0 bytes, findline.o(i.jiaquan_error1))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIT0_IRQHandler
</UL>

<P><STRONG><a name="[a9]"></a>jizhunhang</STRONG> (Thumb, 436 bytes, Stack size 8 bytes, findline.o(i.jizhunhang))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = jizhunhang
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIT0_IRQHandler
</UL>

<P><STRONG><a name="[d0]"></a>key</STRONG> (Thumb, 712 bytes, Stack size 0 bytes, key.o(i.key))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = key &rArr; rowflag &rArr; OLED_Print_Num2 &rArr; OLED_P6x8Str &rArr; OLED_Set_Pos &rArr; OLED_WrCmd &rArr; gpio_set
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftm_pwm_duty
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;port_init
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_P6x8Str
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Fill
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;saveflash
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rowflag
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paper4
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paper3
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paper2
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paper1
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;boma
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_Scan
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[83]"></a>main</STRONG> (Thumb, 116 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = main &rArr; key &rArr; rowflag &rArr; OLED_Print_Num2 &rArr; OLED_P6x8Str &rArr; OLED_Set_Pos &rArr; OLED_WrCmd &rArr; gpio_set
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;port_init_NoAlt
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftm_quad_init
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Init
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_clk
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ov7725_init
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_init
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_config
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SE_init
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SE_PID_init
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Init
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Motor_PID_init
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Read
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pit3_init
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pit1_init
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pit0_init
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORTA_init
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[dc]"></a>motor_init</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, motor.o(i.motor_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = motor_init &rArr; ftm_pwm_init &rArr; FTM_port_mux &rArr; port_init
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftm_pwm_init
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c4]"></a>mt9v032_cof_uart_interrupt</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, seekfree_mt9v032.o(i.mt9v032_cof_uart_interrupt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = mt9v032_cof_uart_interrupt
</UL>
<BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_getchar
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_RX_TX_IRQHandler
</UL>

<P><STRONG><a name="[8e]"></a>ov7725_dma</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, seekfree_7725.o(i.ov7725_dma))
<BR><BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA0_IRQHandler
</UL>

<P><STRONG><a name="[d8]"></a>ov7725_init</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, seekfree_7725.o(i.ov7725_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = ov7725_init &rArr; ov7725_port_init &rArr; dma_portx2buff_init &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_init
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ov7725_reg_init
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ov7725_port_init
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e2]"></a>ov7725_port_init</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, seekfree_7725.o(i.ov7725_port_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = ov7725_port_init &rArr; dma_portx2buff_init &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_portx2buff_init
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;port_init
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ov7725_init
</UL>

<P><STRONG><a name="[e1]"></a>ov7725_reg_init</STRONG> (Thumb, 572 bytes, Stack size 8 bytes, seekfree_7725.o(i.ov7725_reg_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = ov7725_reg_init &rArr; simiic_read_reg &rArr; send_ch &rArr; SCCB_WaitAck &rArr; gpio_set
</UL>
<BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_delay_ms
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simiic_write_reg
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simiic_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ov7725_init
</UL>

<P><STRONG><a name="[b8]"></a>ov7725_vsync</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, seekfree_7725.o(i.ov7725_vsync))
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORTC_IRQHandler
</UL>

<P><STRONG><a name="[d1]"></a>paper1</STRONG> (Thumb, 210 bytes, Stack size 8 bytes, key.o(i.paper1))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = paper1 &rArr; OLED_Print_Num2 &rArr; OLED_P6x8Str &rArr; OLED_Set_Pos &rArr; OLED_WrCmd &rArr; gpio_set
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dis_bmp
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Print_Num2
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_P6x8Str
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key
</UL>

<P><STRONG><a name="[d2]"></a>paper2</STRONG> (Thumb, 244 bytes, Stack size 8 bytes, key.o(i.paper2))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = paper2 &rArr; OLED_Print_Num2 &rArr; OLED_P6x8Str &rArr; OLED_Set_Pos &rArr; OLED_WrCmd &rArr; gpio_set
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Print_Num2
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_P6x8Str
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key
</UL>

<P><STRONG><a name="[d3]"></a>paper3</STRONG> (Thumb, 144 bytes, Stack size 8 bytes, key.o(i.paper3))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = paper3 &rArr; OLED_Print_Num2 &rArr; OLED_P6x8Str &rArr; OLED_Set_Pos &rArr; OLED_WrCmd &rArr; gpio_set
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Print_Num2
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_P6x8Str
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key
</UL>

<P><STRONG><a name="[d4]"></a>paper4</STRONG> (Thumb, 166 bytes, Stack size 8 bytes, key.o(i.paper4))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = paper4 &rArr; OLED_Print_Num2 &rArr; OLED_P6x8Str &rArr; OLED_Set_Pos &rArr; OLED_WrCmd &rArr; gpio_set
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Print_Num2
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_P6x8Str
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key
</UL>

<P><STRONG><a name="[d9]"></a>pit0_init</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, isr.o(i.pit0_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = pit0_init &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pit_init
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[da]"></a>pit1_init</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, isr.o(i.pit1_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = pit1_init &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pit_init
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[db]"></a>pit3_init</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, isr.o(i.pit3_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = pit3_init &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pit_init
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e7]"></a>pit_init</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, mk60_pit.o(i.pit_init))
<BR><BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pit3_init
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pit1_init
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pit0_init
</UL>

<P><STRONG><a name="[b4]"></a>pit_time_get</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, mk60_pit.o(i.pit_time_get))
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORTA_IRQHandler
</UL>

<P><STRONG><a name="[b3]"></a>pit_time_start</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, mk60_pit.o(i.pit_time_start))
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORTA_IRQHandler
</UL>

<P><STRONG><a name="[93]"></a>port_init</STRONG> (Thumb, 102 bytes, Stack size 20 bytes, mk60_port.o(i.port_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = port_init
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftm_quad_init
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FTM_port_mux
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_portx2buff_init
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_init
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ov7725_port_init
</UL>

<P><STRONG><a name="[99]"></a>port_init_NoAlt</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, mk60_port.o(i.port_init_NoAlt))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = port_init_NoAlt
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Init
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_init
</UL>

<P><STRONG><a name="[a7]"></a>pow10</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, seekfree_oled.o(i.pow10))
<BR><BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Print_Num2
</UL>

<P><STRONG><a name="[e8]"></a>read_ch</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, seekfree_iic.o(i.read_ch))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = read_ch &rArr; I2C_SendACK &rArr; gpio_set
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_get
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_ddr
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simiic_delay
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SendACK
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simiic_read_reg
</UL>

<P><STRONG><a name="[d6]"></a>rowflag</STRONG> (Thumb, 218 bytes, Stack size 8 bytes, key.o(i.rowflag))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = rowflag &rArr; OLED_Print_Num2 &rArr; OLED_P6x8Str &rArr; OLED_Set_Pos &rArr; OLED_WrCmd &rArr; gpio_set
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Print_Num2
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_P6x8Str
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key
</UL>

<P><STRONG><a name="[d5]"></a>saveflash</STRONG> (Thumb, 136 bytes, Stack size 8 bytes, key.o(i.saveflash))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = saveflash &rArr; FLASH_WriteSector &rArr; FlashCmdStart
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WriteSector
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_EraseSector
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key
</UL>

<P><STRONG><a name="[e9]"></a>send_ch</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, seekfree_iic.o(i.send_ch))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = send_ch &rArr; SCCB_WaitAck &rArr; gpio_set
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simiic_delay
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCCB_WaitAck
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simiic_write_reg
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simiic_read_reg
</UL>

<P><STRONG><a name="[96]"></a>simiic_delay</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, seekfree_iic.o(i.simiic_delay))
<BR><BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_ch
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_ch
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_stop
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_start
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SendACK
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCCB_WaitAck
</UL>

<P><STRONG><a name="[e6]"></a>simiic_read_reg</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, seekfree_iic.o(i.simiic_read_reg))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = simiic_read_reg &rArr; send_ch &rArr; SCCB_WaitAck &rArr; gpio_set
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_ch
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_ch
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_stop
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_start
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ov7725_reg_init
</UL>

<P><STRONG><a name="[e4]"></a>simiic_write_reg</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, seekfree_iic.o(i.simiic_write_reg))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = simiic_write_reg &rArr; send_ch &rArr; SCCB_WaitAck &rArr; gpio_set
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_ch
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_stop
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_start
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ov7725_reg_init
</UL>

<P><STRONG><a name="[ae]"></a>systick_delay</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, mk60_systick.o(i.systick_delay))
<BR><BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIT1_IRQHandler
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_delay_ms
</UL>

<P><STRONG><a name="[e5]"></a>systick_delay_ms</STRONG> (Thumb, 32 bytes, Stack size 4 bytes, mk60_systick.o(i.systick_delay_ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = systick_delay_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ov7725_reg_init
</UL>

<P><STRONG><a name="[e0]"></a>uart_getchar</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, mk60_uart.o(i.uart_getchar))
<BR><BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mt9v032_cof_uart_interrupt
</UL>

<P><STRONG><a name="[cf]"></a>uart_init</STRONG> (Thumb, 452 bytes, Stack size 24 bytes, mk60_uart.o(i.uart_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = uart_init &rArr; port_init
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;port_init
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_clk
</UL>

<P><STRONG><a name="[bf]"></a>__aeabi_dadd</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, daddsub_clz.o(x$fpl$dadd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;findline
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPEED_Filter
</UL>

<P><STRONG><a name="[ea]"></a>_dadd</STRONG> (Thumb, 332 bytes, Stack size 16 bytes, daddsub_clz.o(x$fpl$dadd), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
</UL>

<P><STRONG><a name="[c0]"></a>__aeabi_d2iz</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dfix.o(x$fpl$dfix))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_d2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;findline
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPEED_Filter
</UL>

<P><STRONG><a name="[ee]"></a>_dfix</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, dfix.o(x$fpl$dfix), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[bd]"></a>__aeabi_i2d</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dflt))
<BR><BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;findline
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPEED_Filter
</UL>

<P><STRONG><a name="[11f]"></a>_dflt</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dflt), UNUSED)

<P><STRONG><a name="[be]"></a>__aeabi_dmul</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dmul.o(x$fpl$dmul))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;findline
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPEED_Filter
</UL>

<P><STRONG><a name="[ef]"></a>_dmul</STRONG> (Thumb, 332 bytes, Stack size 32 bytes, dmul.o(x$fpl$dmul), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[ed]"></a>__fpl_dnaninf</STRONG> (Thumb, 156 bytes, Stack size 16 bytes, dnaninf.o(x$fpl$dnaninf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dmul
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dfix
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[ec]"></a>__fpl_dretinf</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, dretinf.o(x$fpl$dretinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dmul
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[120]"></a>__aeabi_dsub</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, daddsub_clz.o(x$fpl$dsub), UNUSED)

<P><STRONG><a name="[f0]"></a>_dsub</STRONG> (Thumb, 464 bytes, Stack size 32 bytes, daddsub_clz.o(x$fpl$dsub), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
</UL>

<P><STRONG><a name="[7d]"></a>_fp_init</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fpinit.o(x$fpl$fpinit))
<BR><BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_fp_1
</UL>

<P><STRONG><a name="[121]"></a>__fplib_config_fpu_vfp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)

<P><STRONG><a name="[122]"></a>__fplib_config_pureend_doubles</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[90]"></a>FlashCmdStart</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, mk60_flash.o(i.FlashCmdStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FlashCmdStart
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WriteSector
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_EraseSector
</UL>

<P><STRONG><a name="[b7]"></a>NVIC_EnableIRQ</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, isr.o(i.NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pit3_init
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pit1_init
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pit0_init
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORTA_init
</UL>

<P><STRONG><a name="[b6]"></a>NVIC_SetPriority</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, isr.o(i.NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pit3_init
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pit1_init
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pit0_init
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORTA_init
</UL>

<P><STRONG><a name="[e3]"></a>NVIC_EnableIRQ</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, seekfree_7725.o(i.NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ov7725_port_init
</UL>

<P><STRONG><a name="[b9]"></a>SCCB_WaitAck</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, seekfree_iic.o(i.SCCB_WaitAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = SCCB_WaitAck &rArr; gpio_set
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_get
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_ddr
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simiic_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_ch
</UL>

<P><STRONG><a name="[f1]"></a>_dadd1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, daddsub_clz.o(x$fpl$dadd), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
</UL>

<P><STRONG><a name="[eb]"></a>_dsub1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, daddsub_clz.o(x$fpl$dsub), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
